#!/bin/bash
file=$1
save=""
# validamos que se pase un archivo
if [ -z $file ]; then
    echo "Te falta especificar el archivo"; exit;
else
  # directorio que contiene archivos de cada dominio con su respectiva informacion
  report="ZoneTransfer"
  # buscamos si existe un directorio
  search=$(cd $report) 2> /dev/null
  # si no existe, lo creamos
  if [ $? -eq 2 ]; then directory=$(mkdir $report); fi
  # buscamos el binario dig
  digcmd=$(which dig)
  # si no esta instalado, detenemos el script
  if [ $? -eq 1 ]; then echo 'instala dig para continuar'; exit; fi
  
  for domain in $(cat $file);
  do
      save=$report"/"$domain
      echo "\n\nGetting NS domains from $domain ..."
      # dig NS $domain @4.2.2.2 --> 4.2.2.2 es un servidor dns
      # grep ^$domain --> optiene los NS
      # awk {'print $5'} --> optiene la columna 5, que es la que nos interesa
      # elimina el ultimo caracter
      ns_domains=$(dig NS $domain @4.2.2.2|grep ^$domain|awk {'print $5'}|sed 's/.$//g')
      # indica los NS encontrados
      for ns in $ns_domains; do echo "[-] Found: "$ns; done

      for ns in $ns_domains
      do
          # con echo -n, se omite el salto de linea
          echo -n "Trying Zone Transfer from: $ns"
          $digcmd AXFR @$ns $domain|egrep 'Transfer failed|timed out|end of file'>/dev/null
          if [ $? -eq 1 ]
          then
              echo "$ns --> Success."
              echo "$ns --> Success." >> $save #echo -e, interpreta metacaracteres dentro de las comillas
              echo "##################################################################" >> $save
              $digcmd AXFR @$ns $domain >> $save
              echo "##################################################################" >> $save
          else
              echo "$ns --> Fail."
              echo "$ns --> Fail." >> $save
          fi
      done
  done
fi
echo "\nend"
