#!/usr/bin/python2.7
import commands
import re
from netaddr import IPNetwork
import sys
import os

# ip address show muestra las interfaces de red
# strip() elimina los espacios en blanco
# retorna cada un de las lineas que retorna ip address show
iplines=(line.strip() for line in commands.getoutput("ip address show").split('\n'))

# findall, interpreta expresiones regulares
#Turn that into a list of IPv4 and IPv6 address/mask strings
# \d hace referencia a una clase predefinida, es equivalente a [0-9]
# + de uno a muchos
# retorna una lista o arreglo con las coincidencias d ela expresion regular
addresses1=reduce(lambda a,v:a+v,(re.findall(r"inet ([\d.]+/\d+)",line) for line in iplines))

# se obtiene una direccion IP y su mascara
direccion = addresses1[1].split('/')
print("buscando host activos... espere!!")
host_up = []
# ping -w --> Tiempo de espera
for ip in IPNetwork(direccion[0] + "/" + str(direccion[1])):
	response = os.system("ping -c 1 -w2 " + str(ip) + " >/dev/null 2>&1")
	if response == 0: print ip, 'is up!'; host_up.append(str(ip))
	else: print ip, 'is down!';

print "\nhost activos"
for item in host_up: print item