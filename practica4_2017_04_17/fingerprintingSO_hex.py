#!/usr/bin/python2.7
import socket
# chr(i) --> obtiene el codigo ascci de un caracter
# x --> 120
# imprime el codigo ascci
translate =''.join([(len(repr(chr(x)))==3) and chr(x) or '.' for x in range(256)])

def dump(src, length=16):
    result=''
    while src:
       s,src = src[:length],src[length:] # no se esta utilizando src
       hex = ' '.join(["%02X"%ord(x) for x in s])
       s = s.translate(translate)
       result += "%-*s %s\n" % (length*3,hex,s)
    return result

s = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_TCP)
raw = s.recv(16000)
data_response = dump(raw)
#print data_response
if data_response[0:2] == '45': # validamos que se este usando ipv4
    oc1 = int(data_response[65:68],16);
    oc2 = int(data_response[69:71],16);
    oc3 = int(data_response[72:74],16);
    oc4 = int(data_response[75:77],16);
    ip = str(oc1) + "." + str(oc2) + "." + str(oc3) + "." + str(oc4)
    ttl = int(data_response[131:134],16)
    if ttl==64: so = "Linux/Unix"
    elif ttl==128 or ttl==32: so = "Windows"
    elif ttl==254: so = "Solaris/AIX"
    elif ttl==255: so = "BSDI"
    elif ttl==60: so = "AIX"
    else: so="el SO no esta en el script"
    print so
else:
    print "NO esta usando IPv4"
